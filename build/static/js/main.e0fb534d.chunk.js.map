{"version":3,"sources":["components/Header/index.js","redux/action/action.js","components/formSave/index.js","components/formEdit/index.js","components/Table/index.js","App.js","reportWebVitals.js","data/info.js","redux/actionTypes/actionTypes.js","redux/reducer/inforeducer.js","redux/reducer/index.js","redux/store/store.js","index.js"],"names":["Navbar","useState","open","setOpen","input","setInput","toggle","setToggle","theme","useSelector","state","infoReducer","dispatch","useDispatch","useEffect","reset","type","payload","resetData","a","AppBar","className","Toolbar","class","Tabs","onClick","searchName","search","searchData","toLowerCase","InputBase","placeholder","onChange","e","target","value","id","for","src","alt","NewForm","click","formik","useFormik","initialValues","name","email","phone","onSubmit","values","key","actionEdit","handleSubmit","htmlFor","handleChange","FormEdit","keyName","getinfo","dataInformation","useStyles","makeStyles","container","maxWidth","marginTop","width","justifyContent","alignItems","marginLeft","marginRight","fontFamily","table","tbcell","fontWeight","tbcells","tbrow","height","btnone","padding","background","borderRadius","color","border","cursor","btntwo","DenseTable","props","classes","openForm","setOpenForm","editForm","setEditForm","KN","setKN","dataInfo","info","data","map","deleteInfo","event","actionDel","openEdit","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","App","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Info","DELETE_DATA_SUCCESS","EDIT_DATA_SUCCESS","GET_EDIT_DATA_SUCCESS","SAVE_DATA_SUCCESS","SEARCH_DATA_SUCCESS","RESET_DATA","SET_THEME","initialState","successPost","message","InfoReducer","action","actionTypes","concat","filter","alert","Combine","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0fb534d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppBar,Menu, MenuItem, Tab, Tabs, Toolbar, Typography, ListItemText, ListItemIcon } from '@material-ui/core';\r\nimport './Styles.scss';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {searchData, setTheme} from '../../redux/action/action';\r\nimport { resetData } from '../../redux/action/action';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState('');\r\n    const [toggle, setToggle] = useState(false);\r\n    const showProfile = () => {\r\n        setOpen(!open);\r\n    };\r\n    const theme = useSelector(state => state.infoReducer.theme)\r\n    const dispatch = useDispatch();\r\n\r\n    const search = () => {\r\n        const searchName = searchData(input.toLowerCase());\r\n        dispatch(searchName);\r\n    };\r\n    useEffect(()=> {\r\n        const reset = resetData(input);\r\n        dispatch(reset);\r\n    }, [input])\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value)\r\n    };\r\n\r\n    const settogle = () => {\r\n        setToggle(!toggle);\r\n    }\r\n    useEffect(()=> {\r\n        if (toggle) {\r\n            var a = \"light\"\r\n        } else {\r\n            var a = \"dark\"\r\n        }\r\n        const reset = setTheme(a);\r\n        dispatch(reset);\r\n    }, [toggle])\r\n    return (\r\n        <div >\r\n            <AppBar className={theme === \"dark\" ? \"navbars dark\" : \"navbars light\"}>\r\n                <Toolbar>\r\n                    <i class=\"fas fa-bars\" />\r\n                    <h1 className=\"navbars-typo\">\r\n                        Wavelabs\r\n                    </h1>\r\n                    <Tabs className=\"navbars-select\">\r\n                        <select>\r\n                            <option>a</option>\r\n                            <option>b</option>\r\n                        </select>\r\n                    </Tabs>\r\n                    <div className=\"navbars-search\">\r\n                        <button type=\"button\" onClick={search}><i className=\"fas fa-search\" /></button>\r\n                        <InputBase className=\"navbars-search-inp\"\r\n                            placeholder=\"Search (Option + Q)\"\r\n                            onChange={handleChange}\r\n                            value={input}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div class=\"mt-android-orange\" onClick={settogle}> \r\n                        <input id=\"1\" type=\"checkbox\"  />\r\n                        <label for=\"1\"></label>  \r\n                    </div>\r\n                    <i class=\"fas fa-cog\" />\r\n                    <div type=\"button\" className=\"btns\" onClick={showProfile}>\r\n                        <img src=\"/images/duy.jpg\" alt=\"profile-img\" />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={open? \"btns-menu\" : \"btn-menuoff\"} >\r\n                <ul>\r\n                    <button className=\"btns-a\"><span className=\"far fa-user-circle\"></span><li>My Profile</li></button>\r\n                    <button className=\"btns-b\"><span className=\"fas fa-cog\"></span><li>My Setting</li></button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import { Url } from '../../data/baseUrl';\r\n\r\nexport const postInfo = (info) => {\r\n    return {\r\n        type: 'POST_DATA_SUCCESS',\r\n        payload: info,\r\n    }\r\n};\r\n\r\nexport const deleteData = (del) => {\r\n    return {\r\n        type: 'DELETE_DATA_SUCCESS',\r\n        payload: del,\r\n    }\r\n};\r\n\r\nexport const editData = (edit) => {\r\n    return {\r\n        type: 'EDIT_DATA_SUCCESS',\r\n        payload: edit,\r\n    }\r\n};\r\nexport const editDatas = (get) => {\r\n    return {\r\n        type: 'GET_EDIT_DATA_SUCCESS',\r\n        payload: get,\r\n    }\r\n};\r\nexport const saveData = (save) => {\r\n    return {\r\n        type: 'SAVE_DATA_SUCCESS',\r\n        payload: save,\r\n    }\r\n};\r\nexport const searchData = (search) => {\r\n    return {\r\n        type: 'SEARCH_DATA_SUCCESS',\r\n        payload: search,\r\n    }\r\n};\r\nexport const resetData = (reset) => {\r\n    return {\r\n        type: 'RESET_DATA',\r\n        payload: reset,\r\n    }\r\n};\r\nexport const setTheme = (set) => {\r\n    return {\r\n        type: 'SET_THEME',\r\n        payload: set,\r\n    }\r\n};","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport './Styles.scss';\r\nimport { saveData } from '../../redux/action/action';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst NewForm = ({onClick, click}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n    },\r\n    onSubmit: values => {\r\n        const key = {\r\n          name: values.name,\r\n          email: values.email,\r\n          phone: values.phone,\r\n        }\r\n        const actionEdit =  saveData(key);\r\n        dispatch(actionEdit);\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"forms\">\r\n    <button className='btns_close' onClick={onClick}><i class=\"fas fa-times\"></i></button>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"fullName\">Full Name</label>\r\n      <input\r\n        id=\"fullName\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.name}\r\n      />\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n\r\n      <label htmlFor=\"phone\">Phone</label>\r\n      <input\r\n        id=\"phone\"\r\n        name=\"phone\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.phone}\r\n      />\r\n      <button type=\"submit\" onClick={onClick}>Create Information</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewForm;","import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport './Styles.scss';\r\nimport { editDatas } from '../../redux/action/action';\r\nimport { editData } from '../../redux/action/action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst FormEdit = ({onClick, keyName}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => {\r\n      const getinfo = editDatas(keyName);\r\n      dispatch(getinfo); \r\n    }, [keyName]\r\n  );\r\n\r\n\r\n  const dataInformation = [useSelector(state => state.infoReducer.getinfo[0])];\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: dataInformation.name,\r\n      email: dataInformation.email,\r\n      phone: dataInformation.phone,\r\n    },\r\n    onSubmit: values => {\r\n\r\n        const key = {\r\n          name: values.name,\r\n          email: values.email,\r\n          phone: values.phone,\r\n        }\r\n        const actionEdit =  editData(key);\r\n        dispatch(actionEdit);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"forms\">\r\n    <h1>Edit Information</h1>\r\n    <button className='btns_close' onClick={onClick}><i class=\"fas fa-times\"></i></button>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"fullName\">Full Name</label>\r\n      <input\r\n        id=\"fullName\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.name}\r\n      />\r\n\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input\r\n        id=\"email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n\r\n      <label htmlFor=\"phone\">Phone</label>\r\n      <input\r\n        id=\"phone\"\r\n        name=\"phone\"\r\n        type=\"number\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.phone}\r\n      />\r\n      <button type=\"submit\" onClick={onClick}>Save Edit</button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormEdit;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './Styles.scss';\r\nimport NewForm from '../formSave/index';\r\nimport FormEdit from '../formEdit/index';\r\nimport { deleteData } from '../../redux/action/action';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    maxWidth: '95%',\r\n    marginTop: '80px',\r\n    width: 1000,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    fontFamily: 'Montserrat, sansSerif',\r\n  },\r\n  table: {\r\n    maxWidth: '100%',\r\n  },\r\n  tbcell: {\r\n    fontWeight: '500',\r\n  },\r\n  tbcells: {\r\n    fontWeight: 'bolder',\r\n    fontFamily: 'Montserrat, sansSerif'\r\n  },\r\n  tbrow: {\r\n    height: 70,\r\n  },\r\n \r\n  btnone: {\r\n    padding: 4,\r\n    marginLeft: 3, \r\n    width: '27%',\r\n    background: 'rgb(6, 47, 59)',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n    border: '1px solid black',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      background: '#fff',\r\n      color: 'black'\r\n    } \r\n  },\r\n  btntwo: {\r\n    padding: 4,\r\n    marginLeft: 3, \r\n    width: '30%',\r\n    background: 'rgb(245, 36, 9)',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      background: '#fff',\r\n      color: 'black'\r\n    } \r\n  }\r\n\r\n});\r\n\r\nfunction createData(name, email, phone) {\r\n  return { name, email, phone };\r\n}\r\n\r\n\r\nexport default function DenseTable(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [editForm, setEditForm] = useState(false);\r\n  const [KN, setKN] = useState('');\r\n\r\n  const dataInfo = useSelector(state => state.infoReducer.info);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const data = dataInfo.map((data) => \r\n    createData(data.name, data.email, data.phone)\r\n  );\r\n\r\n\r\n\r\n  const deleteInfo = (e) => {\r\n    const event = e.target.value;\r\n    const actionDel = deleteData(event);\r\n    dispatch(actionDel)\r\n  }\r\n\r\n  const openInfo = () => {\r\n    setOpenForm(!openForm);\r\n  }\r\n  const openEdit = (e) => {\r\n    setEditForm(!editForm);\r\n    const event = e.target.value;\r\n    setKN(event)\r\n  }\r\n  return (\r\n\r\n    <div className=\"tables\" >\r\n      <h1>INFORMATION CONTACT</h1>\r\n      <TableContainer className={classes.container} component={Paper} >\r\n      <button className='btns' onClick={openInfo}>Create Information</button>\r\n        <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow className={classes.tbrow}>\r\n              <TableCell className={classes.tbcells} align=\"left\">Name</TableCell>\r\n              <TableCell className={classes.tbcells} align=\"center\">Email</TableCell>\r\n              <TableCell className={classes.tbcells} align=\"center\">Phone</TableCell>\r\n              <TableCell className={classes.tbcells} align=\"center\">Edit</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row) => (\r\n              <TableRow key={row.name} className={classes.tbrow}>\r\n                <TableCell className={classes.tbcell} component=\"th\" scope=\"row\" >\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell className={classes.tbcell} align=\"center\">{row.email}</TableCell>\r\n                <TableCell className={classes.tbcell} align=\"center\">{row.phone}</TableCell>\r\n                <TableCell className=\"button\" align=\"center\">\r\n                  <button className={classes.btnone} type=\"button\" value={row.name} onClick={openEdit}>Edit</button>\r\n                  <button className={classes.btntwo} type=\"button\" value={row.name}  onClick={deleteInfo} >Delete</button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div className={openForm? \"wrap__form\" : \"wrap__forms\"}>\r\n          <NewForm  onClick={() => setOpenForm(!openForm)} />\r\n        </div>\r\n        <div className={editForm? \"wrap__form\" : \"wrap__forms\"}>\r\n          <FormEdit keyName={KN}  onClick={() => setEditForm(!editForm)} />\r\n      </div>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport Header from './components/Header/index';\nimport Table from './components/Table/index';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <Header />\n          <Table />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const Info =  [\r\n    {   \r\n        name: 'Duy',\r\n        email: 'Duy@gmail.com',\r\n        phone: '0859425232'\r\n    },\r\n    {\r\n        name: 'Quoc',\r\n        email: 'Quoc@gmail.com',\r\n        phone: '0859425232'\r\n    }\r\n];","export const POST_DATA_SUCCESS = \"POST_DATA_SUCCESS\";\r\nexport const POST_DATA_FAIL = \"POST_DATA_FAIL\";\r\nexport const DELETE_DATA_SUCCESS = \"DELETE_DATA_SUCCESS\";\r\nexport const DELETE_DATA_FAIL = \"DELETE_DATA_FAIL\";\r\nexport const EDIT_DATA_SUCCESS = \"EDIT_DATA_SUCCESS\";\r\nexport const GET_EDIT_DATA_SUCCESS = \"GET_EDIT_DATA_SUCCESS\";\r\nexport const SAVE_DATA_SUCCESS = \"SAVE_DATA_SUCCESS\";\r\nexport const SEARCH_DATA_SUCCESS = \"SEARCH_DATA_SUCCESS\";\r\nexport const RESET_DATA = \"RESET_DATA\";\r\nexport const SET_THEME = \"SET_THEME\";","import { Info } from '../../data/info';\r\nimport * as actionTypes from '../actionTypes/actionTypes';\r\n\r\nexport const initialState = {\r\n    theme: \"dark\",\r\n    info: Info,\r\n    successPost: false,\r\n    message: null,\r\n    getinfo: []\r\n};\r\n\r\nconst InfoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.EDIT_DATA_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                info:state.info.concat(action.payload).filter(a => a.name !== state.getinfo[0].name) \r\n                \r\n            }\r\n        \r\n        }\r\n        case actionTypes.GET_EDIT_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getinfo: state.info.filter((a) => a.name === action.payload)\r\n                \r\n            }\r\n        case actionTypes.SAVE_DATA_SUCCESS: {\r\n            return {...state, info: state.info.concat(action.payload)\r\n            }\r\n        }\r\n        case actionTypes.DELETE_DATA_SUCCESS: \r\n            return {\r\n                ...state,\r\n                info: state.info.filter((a) => a.name !== action.payload)\r\n            }\r\n        case actionTypes.SEARCH_DATA_SUCCESS: {\r\n\r\n            if (action.payload) {\r\n                return {\r\n                    ...state,\r\n                    info: state.info.filter(a => a.name.toLowerCase() === action.payload)\r\n                }\r\n            } else {\r\n                return alert(\"Contact not found\")\r\n            }\r\n        }\r\n        case actionTypes.RESET_DATA: \r\n            return {\r\n                ...state,\r\n                info: Info\r\n            }\r\n        case actionTypes.SET_THEME: \r\n        return {\r\n            ...state,\r\n            theme: action.payload\r\n        }\r\n        default:\r\n            return state\r\n            \r\n    }\r\n};\r\n\r\nexport default InfoReducer;","import { combineReducers } from \"redux\";\r\nimport  InfoReducer  from \"./inforeducer\";\r\n\r\nconst Combine = combineReducers({\r\n    infoReducer: InfoReducer\r\n});\r\nexport default Combine;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport  Combine from \"../reducer\";\r\n\r\n\r\n    const store = createStore(\r\n        Combine,\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n\r\n    export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport  store  from './redux/store/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n       <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}